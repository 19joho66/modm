/*
 * Copyright (c) 2009-2011, Fabian Greif
 * Copyright (c) 2010, Martin Rosekeit
 * Copyright (c) 2012, Sascha Schade
 * Copyright (c) 2012-2014, 2020, Niklas Hauser
 *
 * This file is part of the modm project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
// ----------------------------------------------------------------------------

#include <modm/architecture/interface/assert.hpp>

extern "C"
{

/**
 * \brief Pure-virtual workaround.
 *
 * The libc does not support a default implementation for handling
 * possible pure-virtual calls. This is a short and empty workaround for this.
 */
void
__cxa_pure_virtual()
{
	modm_assert_debug(0, "cxa", "virtual", "pure");
}

%% if target.platform in ["avr"]
int __cxa_atexit(void (*)(void *), void *, void *)
%% else
// ARM EABI specifies __aeabi_atexit instead of __cxa_atexit
int __aeabi_atexit(void (*)(void *), void *, void *)
%% endif
{
	return 0;
}

void* __dso_handle = (void*) &__dso_handle;

}
