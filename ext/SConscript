#!/usr/bin/env python
# 
# Copyright (c) 2011, Roboterclub Aachen e.V.
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Roboterclub Aachen e.V. nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# $Id$

import os

Import('env')
Import('sources')
Import('defines')

# Paths which should be searched for compileable files
sourcePath = []

# Local include paths which are needed to build the files in the external libraries
buildIncludes = []

# These paths are used to build the local files but are also added to the
# global environment 
globalIncludes = []

# Add the STM32 Standard Peripheral Library
if env['ARCHITECTURE'].startswith('cortex-m3/stm32f10'):
	sourcePath += ['stm32f10x_lib']
	globalIncludes += [
		'ext/stm32f10x_lib/CMSIS/CM3/CoreSupport',
		'ext/stm32f10x_lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x',
		'ext/stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc']

# Add the libmaple from Leaflabs (see https://github.com/leaflabs/libmaple)
if env['ARCHITECTURE'].startswith('cortex-m3/stm32f103'):
	sourcePath += ['libmaple']
	
	sourcePath += ['freertos']
	#globalIncludes += ['ext/freertos']

includes = buildIncludes + globalIncludes
for path in includes:
	env.AppendUnique(CPPPATH = os.path.join(env['XPCC_ROOTPATH'], path))

for path in sourcePath:
	scan = env.FindFiles(path = path)
	
	sources.append(scan.sources)
	defines.update(scan.defines)

result = (sources, defines, globalIncludes)
Return('result')
