# WARNING: This file is generated automatically, do not edit!

rootpath = "${rootpath}"

env = Environment(tools = ['xpcc'],
				  toolpath = [rootpath + '/misc/scons'])

# find all source files
files = env.FindFiles(path = '.')

# build the program
program = env.Program(target = env['XPCC_CONFIG']['general']['name'],
					  source = files.sources)

# build the xpcc library
env.XpccLibrary()

env.Defines()

env.Alias('build', program)
env.Alias('size', env.Size(program))
env.Alias('symbols', env.Symbols(program))

if env.CheckArchitecture('pc'):
	env.Alias('run', env.Run(program))
	env.Alias('all', ['build'])
else:
	hexfile = env.Hex(program)
	env.Alias('program', env.Avrdude(hexfile))
	env.Alias('fuse', env.AvrdudeFuses())
	
	env.Alias('build', [hexfile, env.Listing(program)])
	env.Alias('all', ['build', 'size'])

env.Default('all')
