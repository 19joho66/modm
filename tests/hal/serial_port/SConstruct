xpccpath = '../../..'
env = Environment(tools = ['xpcc'], toolpath = [xpccpath + '/misc/scons'])

files = env.FindFiles(path = '.')

program = env.Program(target = env['XPCC_CONFIG']['general']['name'], source = files.sources)

env.XpccLibrary()

env.Defines()

env.Alias('size', env.Size(program))
env.Alias('symbols', env.Symbols(program))

if env.CheckArchitecture('pc'):
    env.Alias('build', program)
    env.Alias('run', env.Run(program))
    
    env.Alias('all', ['build', 'run'])
else:
    hexfile = env.Hex(program)
    env.Alias('program', env.Avrdude(hexfile))
    
    env.Alias('build', [hexfile, env.Listing(program)])
    env.Alias('fuse', env.AvrdudeFuses())
    env.Alias('all', ['build', 'size'])

env.Default('all')

