// coding: utf-8
// $Id$

/*!
\page tool_configfile 	Tool: configfile

\section tool_configfile_provides Provided builders and methods

\subsection tool_configfile_find FindFiles(path [, unittest, ignore])

Search for every useable source file in this folder and its subfolders (except
.svn folders).
If one folder contains a configuration file named \c build.cfg, then it and it's
subfolders are only included into the search if the current architecture
matches the target-option in this file.

More about this in the page about \ref configuration_files "configuration files".

The returned object Provides the following attributes:
 - sources:	list of source files
 - header:	list of header files
 - defines:	dictionary with defines needed by the source files

Folders named \c test are special folders. If \c unittest = True
the test folders are included in the search. If \c unittest = False all folders
named test are excluded. If \c unittest = None tests are handled as normal
folders.

Files listed in ignore are not included into the result.

Example:
\verbatim
files = env.FindFiles(
	path = [
		'.',
		'../../common/include'],
	ignore = [
		'postman.cpp',
		'hardware/modules.cpp'])
\endverbatim

\subsection tool_configfile_parser ConfigParser()

Create and return a configuration parser class. It is the class which is also used internally
to parse the configuration files.

Methods:
 - <b>read</b>( filename ): \n
   Parses the given file. Call this before using one of the other methods.
   
 - <b>get</b>( section, option, default=None ): \n
   Returns the value of \c option in \c section. Returns \c default if
   \c option is not found.
   Raises \c ParserException if \c option not found and \c default = None.
   
 - <b>getboolean</b>( section, option, default=None ): \n
   Like get but only returns \c True and \c False. Accepted values are "1",
   "yes", "true", and "on" for \c True and "0", "no", "false", and "off"
   for \c False.
   
 - <b>items</b>( section ): \n
   Returns all options in \c section.
   Raises \c ParserException if \c section is not found.

More about this in the page about \ref configuration_files "configuration files".

*/
