// coding: utf-8
// ----------------------------------------------------------------------------
/* Copyright (c) 2011, Roboterclub Aachen e.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Roboterclub Aachen e.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
// ----------------------------------------------------------------------------

#ifndef XPCC__PWM_LED_HPP
#	error	"Don't include this file directly, use 'led.hpp' instead!"
#endif

// ----------------------------------------------------------------------------

namespace xpcc
{
	namespace pwm
	{
		// mathemathical formula for this is:
		// value = ((500000/(0.9*step + 358) - 398)*4.096)
		// Please note the first value is 0xaffe, because then the output
		// compare interrupt never gets triggered, and the LED stays off.
		// This uses 2000 bytes of flash, use Led8 if flash size is important.
		FLASH_STORAGE(uint16_t PwmTable16[1000]) = {
			0xAFFE,0x0,0x1,0x2,0x3,0x4,0x5,0x7,0x8,0x9,0xA,0xB,0xD,0xE,0xF,0x10,0x11,0x13,0x14,0x15,
			0x16,0x17,0x19,0x1A,0x1B,0x1C,0x1D,0x1F,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x2A,0x2B,0x2C,0x2D,
			0x2E,0x30,0x31,0x32,0x33,0x35,0x36,0x37,0x38,0x3A,0x3B,0x3C,0x3D,0x3F,0x40,0x41,0x42,0x44,0x45,0x46,
			0x48,0x49,0x4A,0x4B,0x4D,0x4E,0x4F,0x51,0x52,0x53,0x54,0x56,0x57,0x58,0x5A,0x5B,0x5C,0x5D,0x5F,0x60,
			0x61,0x63,0x64,0x65,0x67,0x68,0x69,0x6B,0x6C,0x6D,0x6F,0x70,0x71,0x73,0x74,0x75,0x77,0x78,0x79,0x7B,
			0x7C,0x7D,0x7F,0x80,0x81,0x83,0x84,0x86,0x87,0x88,0x8A,0x8B,0x8C,0x8E,0x8F,0x91,0x92,0x93,0x95,0x96,
			0x98,0x99,0x9A,0x9C,0x9D,0x9F,0xA0,0xA1,0xA3,0xA4,0xA6,0xA7,0xA8,0xAA,0xAB,0xAD,0xAE,0xB0,0xB1,0xB2,
			0xB4,0xB5,0xB7,0xB8,0xBA,0xBB,0xBD,0xBE,0xC0,0xC1,0xC2,0xC4,0xC5,0xC7,0xC8,0xCA,0xCB,0xCD,0xCE,0xD0,
			0xD1,0xD3,0xD4,0xD6,0xD7,0xD9,0xDA,0xDC,0xDD,0xDF,0xE0,0xE2,0xE3,0xE5,0xE6,0xE8,0xE9,0xEB,0xEC,0xEE,
			0xEF,0xF1,0xF3,0xF4,0xF6,0xF7,0xF9,0xFA,0xFC,0xFD,0xFF,0x101,0x102,0x104,0x105,0x107,0x108,0x10A,0x10C,0x10D,
			0x10F,0x110,0x112,0x113,0x115,0x117,0x118,0x11A,0x11B,0x11D,0x11F,0x120,0x122,0x124,0x125,0x127,0x128,0x12A,0x12C,0x12D,
			0x12F,0x131,0x132,0x134,0x136,0x137,0x139,0x13B,0x13C,0x13E,0x140,0x141,0x143,0x145,0x146,0x148,0x14A,0x14B,0x14D,0x14F,
			0x150,0x152,0x154,0x156,0x157,0x159,0x15B,0x15C,0x15E,0x160,0x162,0x163,0x165,0x167,0x169,0x16A,0x16C,0x16E,0x170,0x171,
			0x173,0x175,0x177,0x178,0x17A,0x17C,0x17E,0x17F,0x181,0x183,0x185,0x187,0x188,0x18A,0x18C,0x18E,0x190,0x191,0x193,0x195,
			0x197,0x199,0x19B,0x19C,0x19E,0x1A0,0x1A2,0x1A4,0x1A6,0x1A7,0x1A9,0x1AB,0x1AD,0x1AF,0x1B1,0x1B3,0x1B5,0x1B6,0x1B8,0x1BA,
			0x1BC,0x1BE,0x1C0,0x1C2,0x1C4,0x1C6,0x1C7,0x1C9,0x1CB,0x1CD,0x1CF,0x1D1,0x1D3,0x1D5,0x1D7,0x1D9,0x1DB,0x1DD,0x1DF,0x1E1,
			0x1E3,0x1E5,0x1E7,0x1E8,0x1EA,0x1EC,0x1EE,0x1F0,0x1F2,0x1F4,0x1F6,0x1F8,0x1FA,0x1FC,0x1FE,0x200,0x202,0x204,0x207,0x209,
			0x20B,0x20D,0x20F,0x211,0x213,0x215,0x217,0x219,0x21B,0x21D,0x21F,0x221,0x223,0x225,0x227,0x22A,0x22C,0x22E,0x230,0x232,
			0x234,0x236,0x238,0x23A,0x23D,0x23F,0x241,0x243,0x245,0x247,0x24A,0x24C,0x24E,0x250,0x252,0x254,0x257,0x259,0x25B,0x25D,
			0x25F,0x262,0x264,0x266,0x268,0x26A,0x26D,0x26F,0x271,0x273,0x276,0x278,0x27A,0x27C,0x27F,0x281,0x283,0x285,0x288,0x28A,
			0x28C,0x28E,0x291,0x293,0x295,0x298,0x29A,0x29C,0x29F,0x2A1,0x2A3,0x2A6,0x2A8,0x2AA,0x2AD,0x2AF,0x2B1,0x2B4,0x2B6,0x2B9,
			0x2BB,0x2BD,0x2C0,0x2C2,0x2C5,0x2C7,0x2C9,0x2CC,0x2CE,0x2D1,0x2D3,0x2D5,0x2D8,0x2DA,0x2DD,0x2DF,0x2E2,0x2E4,0x2E7,0x2E9,
			0x2EC,0x2EE,0x2F1,0x2F3,0x2F6,0x2F8,0x2FB,0x2FD,0x300,0x302,0x305,0x307,0x30A,0x30C,0x30F,0x312,0x314,0x317,0x319,0x31C,
			0x31E,0x321,0x324,0x326,0x329,0x32B,0x32E,0x331,0x333,0x336,0x339,0x33B,0x33E,0x341,0x343,0x346,0x349,0x34B,0x34E,0x351,
			0x353,0x356,0x359,0x35C,0x35E,0x361,0x364,0x367,0x369,0x36C,0x36F,0x372,0x374,0x377,0x37A,0x37D,0x380,0x382,0x385,0x388,
			0x38B,0x38E,0x390,0x393,0x396,0x399,0x39C,0x39F,0x3A2,0x3A4,0x3A7,0x3AA,0x3AD,0x3B0,0x3B3,0x3B6,0x3B9,0x3BC,0x3BF,0x3C2,
			0x3C5,0x3C8,0x3CB,0x3CE,0x3D1,0x3D4,0x3D7,0x3DA,0x3DD,0x3E0,0x3E3,0x3E6,0x3E9,0x3EC,0x3EF,0x3F2,0x3F5,0x3F8,0x3FB,0x3FE,
			0x401,0x404,0x407,0x40B,0x40E,0x411,0x414,0x417,0x41A,0x41D,0x421,0x424,0x427,0x42A,0x42D,0x431,0x434,0x437,0x43A,0x43D,
			0x441,0x444,0x447,0x44B,0x44E,0x451,0x454,0x458,0x45B,0x45E,0x462,0x465,0x468,0x46C,0x46F,0x472,0x476,0x479,0x47D,0x480,
			0x483,0x487,0x48A,0x48E,0x491,0x494,0x498,0x49B,0x49F,0x4A2,0x4A6,0x4A9,0x4AD,0x4B0,0x4B4,0x4B7,0x4BB,0x4BF,0x4C2,0x4C6,
			0x4C9,0x4CD,0x4D0,0x4D4,0x4D8,0x4DB,0x4DF,0x4E3,0x4E6,0x4EA,0x4EE,0x4F1,0x4F5,0x4F9,0x4FC,0x500,0x504,0x508,0x50B,0x50F,
			0x513,0x517,0x51A,0x51E,0x522,0x526,0x52A,0x52D,0x531,0x535,0x539,0x53D,0x541,0x545,0x549,0x54C,0x550,0x554,0x558,0x55C,
			0x560,0x564,0x568,0x56C,0x570,0x574,0x578,0x57C,0x580,0x584,0x588,0x58D,0x591,0x595,0x599,0x59D,0x5A1,0x5A5,0x5A9,0x5AE,
			0x5B2,0x5B6,0x5BA,0x5BE,0x5C3,0x5C7,0x5CB,0x5CF,0x5D4,0x5D8,0x5DC,0x5E1,0x5E5,0x5E9,0x5EE,0x5F2,0x5F6,0x5FB,0x5FF,0x604,
			0x608,0x60C,0x611,0x615,0x61A,0x61E,0x623,0x627,0x62C,0x630,0x635,0x639,0x63E,0x643,0x647,0x64C,0x650,0x655,0x65A,0x65E,
			0x663,0x668,0x66D,0x671,0x676,0x67B,0x67F,0x684,0x689,0x68E,0x693,0x698,0x69C,0x6A1,0x6A6,0x6AB,0x6B0,0x6B5,0x6BA,0x6BF,
			0x6C4,0x6C9,0x6CE,0x6D3,0x6D8,0x6DD,0x6E2,0x6E7,0x6EC,0x6F1,0x6F6,0x6FB,0x700,0x705,0x70B,0x710,0x715,0x71A,0x720,0x725,
			0x72A,0x72F,0x735,0x73A,0x73F,0x745,0x74A,0x74F,0x755,0x75A,0x760,0x765,0x76B,0x770,0x775,0x77B,0x781,0x786,0x78C,0x791,
			0x797,0x79C,0x7A2,0x7A8,0x7AD,0x7B3,0x7B9,0x7BF,0x7C4,0x7CA,0x7D0,0x7D6,0x7DB,0x7E1,0x7E7,0x7ED,0x7F3,0x7F9,0x7FF,0x805,
			0x80B,0x811,0x817,0x81D,0x823,0x829,0x82F,0x835,0x83B,0x841,0x848,0x84E,0x854,0x85A,0x860,0x867,0x86D,0x873,0x87A,0x880,
			0x886,0x88D,0x893,0x89A,0x8A0,0x8A7,0x8AD,0x8B4,0x8BA,0x8C1,0x8C7,0x8CE,0x8D5,0x8DB,0x8E2,0x8E9,0x8EF,0x8F6,0x8FD,0x904,
			0x90B,0x911,0x918,0x91F,0x926,0x92D,0x934,0x93B,0x942,0x949,0x950,0x957,0x95E,0x966,0x96D,0x974,0x97B,0x982,0x98A,0x991,
			0x998,0x9A0,0x9A7,0x9AE,0x9B6,0x9BD,0x9C5,0x9CC,0x9D4,0x9DB,0x9E3,0x9EB,0x9F2,0x9FA,0xA02,0xA09,0xA11,0xA19,0xA21,0xA29,
			0xA31,0xA38,0xA40,0xA48,0xA50,0xA58,0xA61,0xA69,0xA71,0xA79,0xA81,0xA89,0xA92,0xA9A,0xAA2,0xAAA,0xAB3,0xABB,0xAC4,0xACC,
			0xAD5,0xADD,0xAE6,0xAEE,0xAF7,0xB00,0xB08,0xB11,0xB1A,0xB23,0xB2C,0xB34,0xB3D,0xB46,0xB4F,0xB58,0xB61,0xB6A,0xB74,0xB7D,
			0xB86,0xB8F,0xB98,0xBA2,0xBAB,0xBB4,0xBBE,0xBC7,0xBD1,0xBDA,0xBE4,0xBEE,0xBF7,0xC01,0xC0B,0xC15,0xC1E,0xC28,0xC32,0xC3C,
			0xC46,0xC50,0xC5A,0xC64,0xC6E,0xC79,0xC83,0xC8D,0xC98,0xCA2,0xCAC,0xCB7,0xCC1,0xCCC,0xCD6,0xCE1,0xCEC,0xCF7,0xD01,0xD0C,
			0xD17,0xD22,0xD2D,0xD38,0xD43,0xD4E,0xD59,0xD65,0xD70,0xD7B,0xD87,0xD92,0xD9D,0xDA9,0xDB5,0xDC0,0xDCC,0xDD8,0xDE3,0xDEF,
			0xDFB,0xE07,0xE13,0xE1F,0xE2B,0xE37,0xE44,0xE50,0xE5C,0xE69,0xE75,0xE82,0xE8E,0xE9B,0xEA8,0xEB4,0xEC1,0xECE,0xEDB,0xEE8,
			0xEF5,0xF02,0xF0F,0xF1D,0xF2A,0xF37,0xF45,0xF52,0xF60,0xF6E,0xF7B,0xF89,0xF97,0xFA5,0xFB3,0xFC1,0xFCF,0xFDD,0xFEC,0xFFF,
		};
		
		xpcc::accessor::Flash<uint16_t> PwmValues16(PwmTable16);
	}
}


