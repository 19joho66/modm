
def init(module):
    module.name = "id"
    module.parent = "platform"

def prepare(module, options):
    if not options[":target"].has_driver("id:stm32"):
        return False

    module.depends(":platform:core")

    return True

def build(env):
    device = env[":target"]

    properties = device.properties
    properties["target"] = device.identifier
    properties["partname"] = device.partname

    env.substitutions = properties
    env.outbasepath = "src/modm/platform/id"

    env.template("id.hpp.in")
