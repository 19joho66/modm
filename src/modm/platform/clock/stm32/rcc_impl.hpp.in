/*
 * Copyright (c) 2019, Niklas Hauser
 *
 * This file is part of the modm project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
// ----------------------------------------------------------------------------

namespace modm::platform
{

template< Peripheral peripheral >
inline void
Rcc::enable()
{
	__DSB();
	%% for peripheral in peripherals | sort if "EN" in rcc_map[peripheral]
	%% set register = rcc_map[peripheral]["EN"]
	if constexpr (peripheral == Peripheral::{{ peripheral | capitalize }})
	{ RCC->{{register}} |= RCC_{{register}}_{{peripheral}}EN; }
	%% endfor
	__DSB();
}

template< Peripheral peripheral >
inline void
Rcc::disable()
{
	__DSB();
	%% for peripheral in peripherals | sort if "EN" in rcc_map[peripheral]
	%% set register = rcc_map[peripheral]["EN"]
	if constexpr (peripheral == Peripheral::{{ peripheral | capitalize }})
	{ RCC->{{register}} &= ~RCC_{{register}}_{{peripheral}}EN; }
	%% endfor
	__DSB();
}

template< Peripheral peripheral >
inline void
Rcc::reset()
{
	__DSB();
	%% for peripheral in peripherals | sort if "RST" in rcc_map[peripheral]
	%% set register = rcc_map[peripheral]["RST"]
	if constexpr (peripheral == Peripheral::{{ peripheral | capitalize }})
	{
		RCC->{{register}} |=  RCC_{{register}}_{{peripheral}}RST; __DSB();
		RCC->{{register}} &= ~RCC_{{register}}_{{peripheral}}RST;
	}
	%% endfor
	__DSB();
}

}   // namespace modm::platform

