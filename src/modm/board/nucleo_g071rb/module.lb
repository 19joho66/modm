#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2019, Niklas Hauser
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# -----------------------------------------------------------------------------

def init(module):
    module.name = ":board:nucleo-g071rb"
    module.description = """\
# NUCLEO-G071RB

[Nucleo kit for STM32G071RB](https://www.st.com/en/evaluation-tools/nucleo-g071rb.html)
"""

def prepare(module, options):
    if not options[":target"].partname.startswith("stm32g071rbt"):
        return False

    module.depends(":platform:core", ":platform:gpio", ":platform:clock", ":platform:uart:2",
                   ":debug", ":architecture:clock")
    return True

def build(env):
    env.outbasepath = "modm/src/modm/board"
    env.substitutions = {"board_has_logger": True}
    env.template("../board.cpp.in", "board.cpp")
    env.copy('.')

    # Waiting on OpenOCD to add support for STM32G0
    env.log.warning("\nUploading firmware and debugging for STM32G0 via OpenOCD requires this patch: http://openocd.zylin.com/#/c/4807"
                    "\nAlternatively you may copy the compiled binary onto the Nucleo USB Mass-Storage Device manually:"
                    "\n    $ scons bin && cp path/to/build/release/project.bin /Volumes/NODE_G071RB")

    # The patch doesn't include board config file though
    env.outbasepath = "modm/openocd/modm/board/"
    env.copy(repopath("tools/openocd/modm/st_nucleo_g0.cfg"), "st_nucleo_g0.cfg")
    env.collect(":build:openocd.source", "modm/board/st_nucleo_g0.cfg")
